<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.ancientpoetry.user.core.mapper.CommentMapper" >
    <sql id="BASE_TABLE">
      comment
    </sql>
    <sql id="BRIEF_INFO">
        comment_id, comment_content, author_id, user_id, user_name, likes, parent_comment_id
    </sql>
    <sql id="FULL_INFO">
      comment_id, comment_content, author_id, user_id, user_name, likes, parent_comment_id,
      data_create_time, data_modify_time, data_is_deleted
    </sql>

    <select id="selectCommentByUserIdOrderByTime" resultType="com.moon.ancientpoetry.common.po.Comment" parameterType="java.lang.Integer">
        SELECT <include refid="FULL_INFO"/>
        FROM <include refid="BASE_TABLE"/>
        WHERE user_id = #{userId}
        AND data_is_deleted = 0
    </select>

    <select id="selectCommentByParentCommentId" resultType="com.moon.ancientpoetry.common.po.Comment" parameterType="java.lang.Integer">
        SELECT <include refid="BRIEF_INFO"/>
        FROM <include refid="BASE_TABLE"/>
        WHERE parent_comment_id = #{parentCommentId}
        AND data_is_deleted = 0
        ORDER BY likes
    </select>

    <select id="selectCommentByUserIdOrderByTime" resultType="com.moon.ancientpoetry.common.po.Comment" parameterType="java.lang.Integer">
        SELECT <include refid="BRIEF_INFO"/>
        FROM <include refid="BASE_TABLE"/>
        WHERE user_id = #{userId}
        AND data_is_deleted = 0
        ORDER BY data_create_time
    </select>

    <select id="selectCommentsByArticleId" resultType="com.moon.ancientpoetry.common.po.Comment" parameterType="java.lang.Integer">
        SELECT <include refid="BRIEF_INFO"/>
        FROM <include refid="BASE_TABLE"/>
        WHERE article_id = #{articleId}
        AND data_is_deleted = 0
    </select>

    <update id="updateCommentsDeleteState" parameterType="com.moon.ancientpoetry.common.po.Comment">
        UPDATE <include refid="BASE_TABLE"/>
        SET  data_is_deleted = #{dataIsDeleted }
        where commemnt_id = #{commentId, jdbcType=INTEGER}
    </update>

    <update id="updateCommentLikes" parameterType="com.moon.ancientpoetry.common.po.Comment">
        UPDATE <include refid="BASE_TABLE"/>
        SET  likes = #{likes }
        where commemnt_id = #{commentId, jdbcType=INTEGER}
    </update>

    <insert id="insertComment" parameterType="com.moon.ancientpoetry.common.po.Comment">
        INSERT INTO <include refid="BASE_TABLE"/>
        ( <include refid="BRIEF_INFO"/> )
        VALUES
        (#{comment.commentContent}, #{comment.articleId}, #{comment.userId}, #{comment.userName}, #{comment.likes},
        #{comment.parentCommentId},)
    </insert>

    <insert id="insertBatchComments" parameterType="com.moon.ancientpoetry.common.po.Comment">
        INSERT INTO <include refid="BASE_TABLE"/>
        ( <include refid="BRIEF_INFO"/> )
        VALUES
        <foreach collection ="list" item="comment" separator =",">
            (#{comment.commentContent}, #{comment.articleId}, #{comment.userId}, #{comment.userName}, #{comment.likes},
            #{comment.parentCommentId},)
        </foreach >
    </insert>

</mapper>
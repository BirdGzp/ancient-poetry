<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moon.ancientpoetry.user.core.mapper.LikeMapper">
    <sql id="BASE_TABLE">
      like
    </sql>
    <sql id="BRIEF_INFO">
        like_id, user_id, user_name, from_type, from_id
    </sql>
    <sql id="FULL_INFO">
      like_id, user_id, user_name, from_type, from_id,data_create_time, data_modify_time, data_is_deleted
    </sql>

    <select id="selectCountByFromIdAndFromType" resultType="com.moon.ancientpoetry.common.po.Like">
        SELECT COUNT(*)
        FROM
        <include refid="BASE_TABLE"/>
        WHERE from_id = #{fromId}
        AND from_type = #{fromType}
        AND data_is_deleted = 0
    </select>

    <select id="selectLikeByUserIdOrderByTime" resultType="com.moon.ancientpoetry.common.po.Like">
        SELECT
        <include refid="BRIEF_INFO"/>
        FROM
        <include refid="BASE_TABLE"/>
        WHERE user_id = #{userId}
        AND data_is_deleted = 0
        ORDER BY data_modify_time
    </select>

    <update id="updataLikeDeleteState" parameterType="com.moon.ancientpoetry.common.po.Like">
        UPDATE
        <include refid="BASE_TABLE"/>
        SET data_is_deleted = #{dataIsDeleted }
        WHERE from_id = #{fromId}
        AND user_id = #{userId}
        AND from_type = #{fromType}
    </update>

    <insert id="insertBatchLikes" parameterType="com.moon.ancientpoetry.common.po.Like">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        (
        <include refid="BRIEF_INFO"/>
        )
        VALUE
        <foreach collection="list" item="like" separator=",">
            (null, #{like.userId}, #{like.userName}, #{like.fromType}, #{like.fromId})
        </foreach>
    </insert>

    <insert id="insertLike" parameterType="com.moon.ancientpoetry.common.po.Like">
        INSERT INTO
        <include refid="BASE_TABLE"/>
        (
        <include refid="BRIEF_INFO"/>
        )
        VALUE
        (null, #{userId}, #{userName}, #{fromType}, #{fromId})
    </insert>
</mapper>